// Generated by Flexc++ V2.10.00 on Tue, 15 Feb 2022 18:39:11 +0100

#include <iostream>
#include <fstream>
#include <sstream>
#include <stdexcept>
#include <filesystem>

// $insert class_ih
#include "scanner.ih"


    // s_ranges_: use (unsigned) characters as index to obtain
    //           that character's range-number.
    //           The range for EOF is defined in a constant in the
    //           class header file
size_t const ScannerBase::s_ranges_[] =
{
     0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
     3, 3, 3, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9,10,11,12,12,13,14,15,16,17,18,19,20,
    20,20,20,20,20,20,21,21,22,22,23,24,25,26,26,27,28,29,30,31,32,33,34,35,36,
    37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,52,53,54,55,56,57,58,59,60,
    61,62,63,64,65,66,67,68,69,70,71,72,73,73,74,75,76,77,78,79,80,81,82,83,84,
    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
    85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
    85,85,85,85,85,85,
};

// $insert startcondinfo
    // s_dfa_ contains the rows of *all* DFAs ordered by start state.  The
    // enum class StartCondition_is defined in the baseclass header.
    // StartCondition_::INITIAL is always 0.  Each entry defines the row to
    // transit to if the column's character range was sensed. Row numbers are
    // relative to the used DFA, and d_dfaBase_ is set to the first row of
    // the subset to use.  The row's final two values are respectively the
    // rule that may be matched at this state, and the rule's FINAL flag. If
    // the final value equals FINAL (= 1) then, if there's no continuation,
    // the rule is matched. If the BOL flag (8) is also set (so FINAL + BOL (=
    // 9) is set) then the rule only matches when d_atBOL is also true.
int const ScannerBase::s_dfa_[][89] =
{
    // INITIAL
    { 1, 2, 3, 1, 2, 4, 5, 6, 1, 7, 8, 9, 1,10,11, 1,12, 1,13,14,
         15,15, 1,16,17,18, 1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,20,21,19,19,22,19,19,19,19,19,19, 1, 1, 1,23,19, 1,19,24,
         25,19,26,27,19,19,28,19,19,29,19,30,31,19,32,33,19,19,34,35,
         19,36,19, 1,37, 1,-1,    -1, -1},  // 0
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 1
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     3, -1},  // 2
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     4, -1},  // 3
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 4
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    15, -1},  // 5
    {-1,-1,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,40,
         40,40,-1,-1,-1,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 6
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,42,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    56, -1},  // 7
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,44,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 8
    {45,45,-1,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
         45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
         45,45,45,45,45,45,45,45,45,45,45,45,45,46,45,45,45,45,45,45,
         45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
         45,45,45,45,45,45,-1,    72, -1},  // 9
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,47,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    54, -1},  // 10
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 11
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,50,-1,-1,-1,
         -1,-1,-1,-1,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 12
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,52,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    55, -1},  // 13
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,53,
         53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         54,-1,-1,-1,-1,-1,-1,    13, -1},  // 14
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,
         15,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    12, -1},  // 15
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,55,56,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    45, -1},  // 16
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,57,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 17
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,58,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    47, -1},  // 18
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 19
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,60,19,19,19,19,19,19,19,
         61,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,62,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 20
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,63,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 21
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,64,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 22
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    72, -1},  // 23
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,66,19,67,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 24
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,68,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 25
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,69,19,19,19,19,19,19,19,19,19,19,
         70,19,19,-1,-1,-1,-1,    71, -1},  // 26
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,71,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 27
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,72,19,19,19,19,19,19,19,73,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 28
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,74,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 29
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,75,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 30
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,76,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 31
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,77,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 32
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,78,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 33
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,79,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 34
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,80,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 35
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,81,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 36
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,82,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,83,-1,-1,    72, -1},  // 37
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    44, -1},  // 38
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1,  7},  // 39
    {-1,-1,84,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,40,
         40,40,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 40
    {41,41,-1,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
         41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
         41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
         41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
         41,41,41,41,41,41,-1,    -1,  6},  // 41
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    34, -1},  // 42
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    30, -1},  // 43
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    36, -1},  // 44
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,85,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 45
    {86,86,-1,86,86,86,86,86,86,86,86,87,86,86,86,86,86,86,86,88,
         88,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,
         86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,
         86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,
         89,86,86,86,86,86,-1,    -1, -1},  // 46
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    33, -1},  // 47
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    41, -1},  // 48
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    35, -1},  // 49
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    42, -1},  // 50
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    32, -1},  // 51
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    31, -1},  // 52
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,53,
         53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    13, -1},  // 53
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,
         90,90,-1,-1,-1,-1,-1,90,90,90,90,90,90,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,90,
         90,90,90,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 54
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,91,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    53, -1},  // 55
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    46, -1},  // 56
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    43, -1},  // 57
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    48, -1},  // 58
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,92,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    52, -1},  // 59
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,93,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 60
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    61, -1},  // 61
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,94,19,19,95,19,96,19,19,19,19,19,19,19,
         19,19,19,19,19,97,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 62
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,98,19,19,19,19,19,19,19,19,19,19,
         99,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 63
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,100,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 64
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    38, -1},  // 65
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,101,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 66
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,102,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 67
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,103,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 68
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,104,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 69
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,105,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 70
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,106,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 71
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    21, -1},  // 72
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,107,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 73
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,108,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 74
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,109,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 75
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,110,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 76
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,111,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 77
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,112,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 78
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,113,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 79
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,114,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 80
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,115,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 81
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    37, -1},  // 82
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    29, -1},  // 83
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1,  5},  // 84
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     8, -1},  // 85
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,116,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 86
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,116,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     8, -1},  // 87
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,116,-1,-1,-1,-1,-1,-1,-1,117,
         117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 88
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,116,-1,-1,-1,-1,-1,-1,-1,118,
         118,118,-1,-1,-1,-1,-1,118,118,118,118,118,118,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,118,118,
         118,118,118,118,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 89
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,
         90,90,-1,-1,-1,-1,-1,90,90,90,90,90,90,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,90,
         90,90,90,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    14, -1},  // 90
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    39, -1},  // 91
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    40, -1},  // 92
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    57, -1},  // 93
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,119,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 94
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,120,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 95
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,121,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 96
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,122,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 97
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,123,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 98
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,124,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 99
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,125,126,19,19,19,19,19,19,19,
         19,19,19,19,127,19,19,19,19,128,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 100
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,129,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 101
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,130,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 102
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,131,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 103
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,132,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 104
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,133,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 105
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    20, -1},  // 106
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    25, -1},  // 107
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,134,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 108
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,135,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 109
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,136,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 110
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,137,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 111
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,138,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 112
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,139,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 113
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,140,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 114
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,141,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 115
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    11, -1},  // 116
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,142,
         142,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 117
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,143,
         143,143,-1,-1,-1,-1,-1,143,143,143,143,143,143,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,143,143,
         143,143,143,143,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 118
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,144,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 119
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,145,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 120
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,146,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 121
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,147,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 122
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,148,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 123
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,149,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 124
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,150,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 125
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,151,152,19,19,19,19,19,19,19,19,19,
         19,19,19,19,153,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 126
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,154,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 127
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,155,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 128
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    28, -1},  // 129
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,156,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 130
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,157,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 131
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    18, -1},  // 132
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    19, -1},  // 133
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    26, -1},  // 134
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,158,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 135
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,159,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 136
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,160,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 137
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,161,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 138
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    24, -1},  // 139
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,162,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 140
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,163,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 141
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,164,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 142
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,165,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    -1, -1},  // 143
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    68, -1},  // 144
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    64, -1},  // 145
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,166,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 146
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,167,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 147
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,168,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 148
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,169,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 149
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,170,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 150
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,171,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 151
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,172,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 152
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,173,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 153
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,174,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 154
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,175,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 155
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    16, -1},  // 156
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,176,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 157
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    50, -1},  // 158
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    49, -1},  // 159
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,177,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 160
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,178,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 161
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    23, -1},  // 162
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,179,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 163
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     9, -1},  // 164
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,    10, -1},  // 165
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    60, -1},  // 166
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,180,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 167
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,181,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 168
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,182,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 169
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,183,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 170
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,184,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 171
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,185,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 172
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,186,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 173
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,187,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 174
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,188,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 175
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,189,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 176
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    22, -1},  // 177
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    27, -1},  // 178
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,190,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 179
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,191,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 180
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    58, -1},  // 181
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,192,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 182
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    70, -1},  // 183
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    62, -1},  // 184
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    59, -1},  // 185
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    65, -1},  // 186
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    67, -1},  // 187
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,193,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 188
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,194,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 189
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    51, -1},  // 190
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    66, -1},  // 191
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,195,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    71, -1},  // 192
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    69, -1},  // 193
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    17, -1},  // 194
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,
         19,19,-1,-1,-1,-1,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,-1,-1,19,-1,19,19,
         19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,
         19,19,19,-1,-1,-1,-1,    63, -1},  // 195
    // str
    { 1, 1,-1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1,-1,    -1, -1},  // 0
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     1, -1},  // 1
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     0, -1},  // 2
    { 4, 4,-1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
          4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
          4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
          4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
          4, 4, 4, 4, 4, 4,-1,     1, -1},  // 3
    {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
         -1,-1,-1,-1,-1,-1,-1,     2, -1},  // 4
};


int const (*ScannerBase::s_dfaBase_[])[89] =
{
    s_dfa_ + 0,
    s_dfa_ + 196,
};

size_t ScannerBase::s_istreamNr = 0;

// $insert inputImplementation
#include "input.src"

ScannerBase::ScannerBase(std::istream &in, std::ostream &out)
:
    d_cwd(std::filesystem::current_path().string()),
    d_out(new std::ostream(out.rdbuf())),
// $insert interactiveInit
    d_in(0),
    d_dfaBase_(s_dfa_)
{
    p_pushStream(s_istream, new std::istream(in.rdbuf()));
}

void ScannerBase::switchStream_(std::istream &in, size_t lineNr)
{
    d_input->close();
    d_streamStack.back().input = { new std::istream(in.rdbuf()), lineNr };
}


ScannerBase::ScannerBase(std::string const &infilename, std::string const &outfilename)
:
    d_cwd(std::filesystem::current_path().string()),
    d_out(outfilename == "-"    ? new std::ostream(std::cout.rdbuf()) :
          outfilename == ""     ? new std::ostream(std::cerr.rdbuf()) :
                                  new std::ofstream(outfilename)),
    d_dfaBase_(s_dfa_)
{
    p_pushStream(infilename, { new std::ifstream(infilename) });
    toCwd();
}

void ScannerBase::switchStreams(std::istream &in, std::ostream &out)
{
    switchStream_(in, 1);
    switchOstream(out);
}

void ScannerBase::switchIstream(std::string const &infilename)
{
    d_input->close();
    d_filename = infilename;

    d_streamStack.back() = 
        StreamStruct{ chgWorkingDir(d_filename), 
                      { new std::ifstream(infilename) } };

    d_atBOL = true;
}

void ScannerBase::switchStreams(std::string const &infilename,
                           std::string const &outfilename)
{
    switchOstream(outfilename);
    switchIstream(infilename);
}

void ScannerBase::pushStream(std::istream  &istr)
{
    p_pushStream("(istream)", new std::istream(istr.rdbuf())); //streamPtr);
}

void ScannerBase::pushStream(std::string const &name)
{
    std::istream *streamPtr = new std::ifstream(name);
    if (!*streamPtr)
    {
        delete streamPtr;
        throw std::runtime_error("Cannot read " + name);
    }
    p_pushStream(name, streamPtr);
}



void ScannerBase::toCwd() const
{
    using namespace std;
    using namespace filesystem;

    error_code ec;
    current_path(d_cwd, ec);
};

// static
std::string ScannerBase::chgWorkingDir(std::string const &name)     // any name
{
    using namespace std;
    using namespace filesystem;

    if (name == s_istream)                              // used with istreams
        return name;
                                                        // a filename: get its
    auto path = absolute(name);                         // full pathname

    error_code ec;
    current_path(path.parent_path(), ec);

    return path.string();                               // return the pathname
}

void ScannerBase::p_pushStream(std::string const &name, std::istream *streamPtr)
{
    if (d_streamStack.size() == s_maxSizeofStreamStack_)
    {
        delete streamPtr;
        throw std::length_error("Max stream stack size exceeded");
    }

    d_filename = name;
    d_streamStack.push_back(
                    StreamStruct{chgWorkingDir(d_filename), { streamPtr } }
                  );

    d_input = &d_streamStack.back().input;

    d_atBOL = true;
}

void ScannerBase::switchOstream(std::ostream &out)
{
    *d_out << std::flush;
    d_out.reset(new std::ostream(out.rdbuf()));
}

// $insert debugFunctions
void ScannerBase::setDebug(bool onOff)
{}

bool ScannerBase::debug() const
{
    return false;
}

void ScannerBase::redo(size_t nChars)
{
    size_t from = nChars >= length() ? 0 : length() - nChars;
    d_input->reRead(d_matched, from);
    d_matched.resize(from);
}

void ScannerBase::switchOstream(std::string const &outfilename)
{
    *d_out << std::flush;
    d_out.reset(
            outfilename == "-"    ? new std::ostream(std::cout.rdbuf()) :
            outfilename == ""     ? new std::ostream(std::cerr.rdbuf()) :
                                    new std::ofstream(outfilename));
}


bool ScannerBase::popStream()
{
    using namespace std::filesystem;

    d_input->close();

    if (d_streamStack.size() <= 1)
        return false;

    d_streamStack.pop_back();

    d_filename = path{ chgWorkingDir(d_streamStack.back().pushedName) 
                     }.filename().string();

    d_input = &d_streamStack.back().input;

    return true;
}

// $insert lopImplementation
void ScannerBase::lopf_(size_t tail)
{
    tail = length() - tail;
    push(d_matched.substr(tail, std::string::npos));
    d_matched.resize(tail);
    d_atBOL = length() && d_matched.back() == '\n';
}


  // See the manual's section `Run-time operations' section for an explanation
  // of this member.
ScannerBase::ActionType_ ScannerBase::actionType_(size_t range)
{
    d_nextState = d_dfaBase_[d_state][range];

    if (d_nextState != -1)                  // transition is possible
        return ActionType_::CONTINUE;

    if (knownFinalState())                  // FINAL state reached
        return ActionType_::MATCH;         

    if (d_matched.size())
        return ActionType_::ECHO_FIRST;    // no match, echo the 1st char

    return range != s_rangeOfEOF_ ? 
                ActionType_::ECHO_CH 
            : 
                ActionType_::RETURN;
}

void ScannerBase::accept(size_t nChars)          // old name: less
{
    if (nChars < d_matched.size())
    {
        d_input->reRead(d_matched, nChars);
        d_matched.resize(nChars);
    }
}

void ScannerBase::setMatchedSize(size_t length)
{
    d_input->reRead(d_matched, length);  // reread the tail section
    d_matched.resize(length);           // return what's left
}

  // At this point a rule has been matched.  The next character is not part of
  // the matched rule and is sent back to the input.  The final match length
  // is determined, the index of the matched rule is determined, and then
  // d_atBOL is updated. Finally the rule's index is returned.
  // The numbers behind the finalPtr assignments are explained in the 
  // manual's `Run-time operations' section.
size_t ScannerBase::matched_(size_t ch)
{
    d_input->reRead(ch);

    FinalData *finalPtr;
                            
    if (not d_atBOL)                    // not at BOL
        finalPtr = &d_final.std;        // then use the std rule (3, 4)

                                        // at BOL
    else if (not available(d_final.std.rule))   // only a BOL rule avail.
            finalPtr = &d_final.bol;            // use the BOL rule (6)

    else if (not available(d_final.bol.rule)) // only a std rule is avail.
        finalPtr = &d_final.std;        // use the std rule (7)
        
    else if (                           // Both are available (8)
        d_final.bol.length !=           // check lengths of matched texts
        d_final.std.length              // unequal lengths, use the rule
    )                                   // having the longer match length
        finalPtr =              
            d_final.bol.length > d_final.std.length ?
                &d_final.bol
            :
                &d_final.std;

    else                            // lengths are equal: use 1st rule
        finalPtr = 
            d_final.bol.rule < d_final.std.rule ?
                &d_final.bol
            :
                &d_final.std;

    setMatchedSize(finalPtr->length);

    d_atBOL = d_matched.back() == '\n';


    return finalPtr->rule;
}

size_t ScannerBase::getRange_(int ch)       // using int to prevent casts
{
    return ch == AT_EOF ? as<size_t>(s_rangeOfEOF_) : s_ranges_[ch];
}

  // At this point d_nextState contains the next state and continuation is
  // possible. The just read char. is appended to d_match
void ScannerBase::continue_(int ch)
{
    d_state = d_nextState;

    if (ch != AT_EOF)
        d_matched += ch;
}

void ScannerBase::echoCh_(size_t ch)
{
    *d_out << as<char>(ch);
    d_atBOL = ch == '\n';
}


   // At this point there is no continuation. The last character is
   // pushed back into the input stream as well as all but the first char. in
   // the buffer. The first char. in the buffer is echoed to stderr. 
   // If there isn't any 1st char yet then the current char doesn't fit any
   // rules and that char is then echoed
void ScannerBase::echoFirst_(size_t ch)
{
    d_input->reRead(ch);
    d_input->reRead(d_matched, 1);
    echoCh_(d_matched[0]);
}

    // Update the rules associated with the current state, do this separately
    // for BOL and std rules.
    // If a rule was set, update the rule index and the current d_matched
    // length. 
void ScannerBase::updateFinals_()
{
    size_t len = d_matched.size();

    int const *rf = d_dfaBase_[d_state] + s_finIdx_;

    if (rf[0] != -1)        // update to the latest std rule
    {
        d_final.std = FinalData { as<size_t>(rf[0]), len };
    }

    if (rf[1] != -1)        // update to the latest bol rule
    {
        d_final.bol = FinalData { as<size_t>(rf[1]), len };
    }
}

void ScannerBase::reset_()
{
    d_final = Final{ 
                    FinalData{s_unavailable, 0}, 
                    FinalData {s_unavailable, 0} 
                };

    d_state = 0;
    d_return = true;

    if (!d_more)
        d_matched.clear();

    d_more = false;
}

int Scanner::executeAction_(size_t ruleIdx)
try
{
    switch (ruleIdx)
    {
        // $insert actions
        case 0:
        {
#line 13 "lexer"
            return cleanString();
        }
        break;
        case 1:
        case 2:
        {
#line 16 "lexer"
            more();
        }
        break;
        case 4:
        {
#line 20 "lexer"
            setWhere();
        }
        break;
        case 5:
        {
#line 22 "lexer"
            setLineNr();
        }
        break;
        case 6:
        {
#line 24 "lexer"
            pushFile();
        }
        break;
        case 8:
        case 9:
        case 10:
        case 11:
        {
#line 31 "lexer"
            return cleanString();
        }
        break;
        case 12:
        {
#line 34 "lexer"
            return token(Tokens::NUMBER, stoul(matched()));
        }
        break;
        case 13:
        {
#line 37 "lexer"
            return token(Tokens::NUMBER, stoul(matched(), 0, 8));
        }
        break;
        case 14:
        {
#line 39 "lexer"
            {
                return token(Tokens::NUMBER, 
                stoul(&matched()[2], 0, 16));
            }
        }
        break;
        case 15:
        {
#line 44 "lexer"
            {
                more();
                begin(StartCondition_::str);
            }
        }
        break;
        case 16:
        {
#line 49 "lexer"
            return Tokens::BREAK;
        }
        break;
        case 17:
        {
#line 51 "lexer"
            return Tokens::CONTINUE;
        }
        break;
        case 18:
        {
#line 53 "lexer"
            return Tokens::ELSE;
        }
        break;
        case 19:
        {
#line 55 "lexer"
            return Tokens::EXIT;
        }
        break;
        case 20:
        {
#line 57 "lexer"
            return Tokens::FOR;
        }
        break;
        case 21:
        {
#line 59 "lexer"
            return Tokens::IF;
        }
        break;
        case 22:
        {
#line 61 "lexer"
            return Tokens::RETURN;
        }
        break;
        case 23:
        {
#line 63 "lexer"
            return Tokens::WHILE;
        }
        break;
        case 24:
        {
#line 65 "lexer"
            return token(Tokens::VOID,e_void);
        }
        break;
        case 25:
        {
#line 67 "lexer"
            return token(Tokens::INT,e_int);
        }
        break;
        case 26:
        {
#line 69 "lexer"
            return token(Tokens::LIST,e_list);
        }
        break;
        case 27:
        {
#line 71 "lexer"
            return token(Tokens::STRINGTYPE, e_str);
        }
        break;
        case 28:
        {
#line 73 "lexer"
            return token (Tokens::BOOL,e_bool);
        }
        break;
        case 29:
        {
#line 75 "lexer"
            return Tokens::OR;
        }
        break;
        case 30:
        {
#line 77 "lexer"
            return Tokens::AND;
        }
        break;
        case 31:
        {
#line 81 "lexer"
            return token(Tokens::MATH_IS,Opcode::div);
        }
        break;
        case 32:
        {
#line 83 "lexer"
            return token(Tokens::MATH_IS,Opcode::sub);
        }
        break;
        case 33:
        {
#line 85 "lexer"
            return token(Tokens::MATH_IS,Opcode::mul);
        }
        break;
        case 34:
        {
#line 87 "lexer"
            return token(Tokens::MATH_IS,Opcode::mod);
        }
        break;
        case 35:
        {
#line 89 "lexer"
            return token(Tokens::MATH_IS,Opcode::add);
        }
        break;
        case 36:
        {
#line 91 "lexer"
            return token(Tokens::MATH_IS,Opcode::band);
        }
        break;
        case 37:
        {
#line 93 "lexer"
            return token(Tokens::MATH_IS,Opcode::bor);
        }
        break;
        case 38:
        {
#line 95 "lexer"
            return token(Tokens::MATH_IS,Opcode::bxor);
        }
        break;
        case 39:
        {
#line 97 "lexer"
            return token(Tokens::MATH_IS,Opcode::shl);
        }
        break;
        case 40:
        {
#line 99 "lexer"
            return token(Tokens::MATH_IS,Opcode::shr);
        }
        break;
        case 41:
        {
#line 101 "lexer"
            return token(Tokens::INCDEC,Opcode::inc);
        }
        break;
        case 42:
        {
#line 103 "lexer"
            return token(Tokens::INCDEC,Opcode::dec);
        }
        break;
        case 43:
        {
#line 105 "lexer"
            return token(Tokens::EQUALITY,Opcode::eq);
        }
        break;
        case 44:
        {
#line 107 "lexer"
            return token(Tokens::EQUALITY,Opcode::neq);
        }
        break;
        case 45:
        {
#line 109 "lexer"
            return token(Tokens::ORDER,Opcode::sm);
        }
        break;
        case 46:
        {
#line 111 "lexer"
            return token(Tokens::ORDER,Opcode::smeq);
        }
        break;
        case 47:
        {
#line 113 "lexer"
            return token(Tokens::ORDER,Opcode::gr);
        }
        break;
        case 48:
        {
#line 115 "lexer"
            return token(Tokens::ORDER,Opcode::greq);
        }
        break;
        case 49:
        {
#line 117 "lexer"
            return token(Tokens::ORDER,Opcode::older);
        }
        break;
        case 50:
        case 51:
        {
#line 120 "lexer"
            return token(Tokens::ORDER,Opcode::younger);
        }
        break;
        case 52:
        {
#line 122 "lexer"
            return token(Tokens::SHIFT,Opcode::shr);
        }
        break;
        case 53:
        {
#line 124 "lexer"
            return token(Tokens::SHIFT,Opcode::shl);
        }
        break;
        case 54:
        {
#line 126 "lexer"
            return token(Tokens::MULTIPLY,Opcode::mul);
        }
        break;
        case 55:
        {
#line 128 "lexer"
            return token(Tokens::MULTIPLY,Opcode::div);
        }
        break;
        case 56:
        {
#line 130 "lexer"
            return token(Tokens::MULTIPLY,Opcode::mod);
        }
        break;
        case 57:
        case 58:
        {
#line 133 "lexer"
            return token(Tokens::NUMBER, 0);
        }
        break;
        case 59:
        case 60:
        case 61:
        {
#line 137 "lexer"
            return token(Tokens::NUMBER, 1);
        }
        break;
        case 62:
        case 63:
        case 64:
        {
#line 141 "lexer"
            return token(Tokens::NUMBER, 2);
        }
        break;
        case 65:
        case 66:
        {
#line 144 "lexer"
            return token(Tokens::NUMBER, 4);
        }
        break;
        case 67:
        case 68:
        {
#line 147 "lexer"
            return token(Tokens::NUMBER, 8);
        }
        break;
        case 69:
        {
#line 149 "lexer"
            return token(Tokens::NUMBER, 16);
        }
        break;
        case 70:
        {
#line 151 "lexer"
            return token(Tokens::NUMBER, 32);
        }
        break;
        case 71:
        {
#line 153 "lexer"
            return Tokens::IDENTIFIER;
        }
        break;
        case 72:
        {
#line 156 "lexer"
            return matched().front();
        }
        break;
        case 7:
        {
#line 26 "lexer"
            lopf_(1);
            popFile();
        }
        break;
    }
    noReturn_();
    return 0;
}
catch (Leave_ value)
{
    return static_cast<int>(value);
}

int Scanner::lex_()
{
    reset_();
    preCode();

    while (true)
    {
        size_t ch = get_();                // fetch next char
        size_t range = getRange_(ch);      // determine the range

        updateFinals_();                    // update the state's Final info

        switch (actionType_(range))        // determine the action
        {
            case ActionType_::CONTINUE:
                continue_(ch);
            continue;

            case ActionType_::MATCH:
            {
                d_token_ = executeAction_(matched_(ch));
                if (return_())
                {
                    print();
                    toCwd();
                    return d_token_;
                }
                break;
            }

            case ActionType_::ECHO_FIRST:
                echoFirst_(ch);
            break;

            case ActionType_::ECHO_CH:
                echoCh_(ch);
            break;

            case ActionType_::RETURN:
                if (!popStream())
                {
                     postCode(PostEnum_::END);
                     toCwd();
                     return 0;
                }
                postCode(PostEnum_::POP);
             continue;
        } // switch

        postCode(PostEnum_::WIP);

        reset_();
        preCode();
    } // while
}

void ScannerBase::print_() const
{
}


